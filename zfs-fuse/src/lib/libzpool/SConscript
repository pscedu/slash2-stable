Import('env')
import os 

VariantDir('build-user', '.', duplicate = 0)
VariantDir('build-kernel', '.', duplicate = 0)
VariantDir('build-libslzfsfuse', '.', duplicate = 0)

objects = []
objects.append('arc.c')
objects.append('bplist.c')
objects.append('dbuf.c')
objects.append('ddt.c')
objects.append('ddt_zap.c')
objects.append('dmu.c')
objects.append('dmu_object.c')
objects.append('dmu_objset.c')
objects.append('dmu_send.c')
objects.append('dmu_traverse.c')
objects.append('dmu_tx.c')
objects.append('dmu_zfetch.c')
objects.append('dnode.c')
objects.append('dnode_sync.c')
objects.append('dsl_dataset.c')
objects.append('dsl_deleg.c')
objects.append('dsl_dir.c')
objects.append('dsl_pool.c')
objects.append('dsl_prop.c')
objects.append('dsl_scan.c')
objects.append('dsl_synctask.c')
objects.append('fletcher.c')
objects.append('flushwc.c')
objects.append('gzip.c')
objects.append('kmem_asprintf.c')
objects.append('lz4.c')
objects.append('lzjb.c')
objects.append('metaslab.c')
objects.append('refcount.c')
objects.append('rprwlock.c')
objects.append('rrwlock.c')
objects.append('sha256.c')
objects.append('spa.c')
objects.append('spa_config.c')
objects.append('spa_errlog.c')
objects.append('spa_history.c')
objects.append('spa_misc.c')
objects.append('space_map.c')
objects.append('trim_map.c')
objects.append('txg.c')
objects.append('uberblock.c')
objects.append('unique.c')
objects.append('util.c')
objects.append('vdev.c')
objects.append('vdev_cache.c')
objects.append('vdev_file.c')
objects.append('vdev_label.c')
objects.append('vdev_mirror.c')
objects.append('vdev_missing.c')
objects.append('vdev_queue.c')
objects.append('vdev_raidz.c')
objects.append('vdev_root.c')
objects.append('zap.c')
objects.append('zap_leaf.c')
objects.append('zap_micro.c')
objects.append('zfs_byteswap.c')
objects.append('zfs_debug.c')
objects.append('zfs_fm.c')
objects.append('zfs_fuid.c')
objects.append('zfs_znode.c')
objects.append('zil.c')
objects.append('zio.c')
objects.append('zio_checksum.c')
objects.append('zio_compress.c')
objects.append('zio_inject.c')
objects.append('zle.c')

objects_user = ['build-user/' + o for o in objects] + Split('build-user/kernel.c build-user/taskq.c')
objects_kernel = ['build-kernel/' + o for o in objects]

cpppath_common = Split('#lib/libavl/include #lib/libnvpair/include #lib/libzfscommon/include #lib/libumem/include')
cpppath_user = cpppath_common + Split('./include #lib/libsolcompat/include')
cpppath_kernel = cpppath_common + ['#lib/libsolkerncompat/include']

ccflags_kernel = ['-D_KERNEL']

f = os.popen('cd ../../../.. && make printvar-FUSE_INCLUDES')
cpppath_user.extend(o[2:] for o in Split(f.readline().strip()))
# + Split('-Wall -W')
f.close()

env.StaticLibrary('libzpool-user', objects_user, CPPPATH = env['CPPPATH'] + cpppath_user)
env.StaticLibrary('libzpool-kernel', objects_kernel, CPPPATH = env['CPPPATH'] + cpppath_kernel, CCFLAGS = env['CCFLAGS'] + ccflags_kernel)

sl_obj = ['build-libslzfsfuse/' + o for o in objects]
sl_ccflags = ccflags_kernel + ['-DZFS_SLASHLIB']
env.StaticLibrary('libslzpool-kernel', sl_obj,
    CPPPATH = env['CPPPATH'] + cpppath_kernel,
    CCFLAGS = env['CCFLAGS'] + sl_ccflags)
